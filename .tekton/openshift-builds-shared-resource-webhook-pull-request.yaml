apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/openshift/csi-driver-shared-resource?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: |
      event == "pull_request" &&
      target_branch == "master" &&
      (
        files.all.exists(x, x.matches('go.mod|go.sum|.konflux/shared-resource-webhook/Dockerfile')) ||
        files.all.exists(x, x.matches('cmd/webhook|pkg/config|pkg/webhook')) ||
        files.all.exists(x, x.matches('.tekton/openshift-builds-shared-resource-webhook-pull-request.yaml'))
      )
  labels:
    appstudio.openshift.io/application: openshift-builds
    appstudio.openshift.io/component: openshift-builds-shared-resource-webhook
    pipelines.appstudio.openshift.io/type: build
  name: openshift-builds-shared-resource-webhook-on-pull-request
  namespace: rh-openshift-builds-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/rh-openshift-builds-tenant/openshift-builds-shared-resource-webhook:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: .konflux/shared-resource-webhook/Dockerfile
  - name: build-source-image
    value: "true"
  - name: hermetic
    value: "true"
  - name: build-platforms
    value:
      - linux/x86_64
      - linux/arm64
  - name: prefetch-input
    value: '{"packages": [{"type": "gomod"}]}'
  pipelineRef:
    resolver: git
    params:
      - name: url
        value: https://github.com/redhat-openshift-builds/release.git
      - name: revision
        value: main
      - name: pathInRepo
        value: /pipelines/konflux-build-multi-platform.yaml
  taskRunTemplate:
    serviceAccountName: build-pipeline-openshift-builds-shared-resource-webhook
  workspaces:
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
status: {}
