// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/openshift/api/sharedresource/v1alpha1"
	sharedresourcev1alpha1 "github.com/openshift/client-go/sharedresource/applyconfigurations/sharedresource/v1alpha1"
	typedsharedresourcev1alpha1 "github.com/openshift/client-go/sharedresource/clientset/versioned/typed/sharedresource/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeSharedConfigMaps implements SharedConfigMapInterface
type fakeSharedConfigMaps struct {
	*gentype.FakeClientWithListAndApply[*v1alpha1.SharedConfigMap, *v1alpha1.SharedConfigMapList, *sharedresourcev1alpha1.SharedConfigMapApplyConfiguration]
	Fake *FakeSharedresourceV1alpha1
}

func newFakeSharedConfigMaps(fake *FakeSharedresourceV1alpha1) typedsharedresourcev1alpha1.SharedConfigMapInterface {
	return &fakeSharedConfigMaps{
		gentype.NewFakeClientWithListAndApply[*v1alpha1.SharedConfigMap, *v1alpha1.SharedConfigMapList, *sharedresourcev1alpha1.SharedConfigMapApplyConfiguration](
			fake.Fake,
			"",
			v1alpha1.SchemeGroupVersion.WithResource("sharedconfigmaps"),
			v1alpha1.SchemeGroupVersion.WithKind("SharedConfigMap"),
			func() *v1alpha1.SharedConfigMap { return &v1alpha1.SharedConfigMap{} },
			func() *v1alpha1.SharedConfigMapList { return &v1alpha1.SharedConfigMapList{} },
			func(dst, src *v1alpha1.SharedConfigMapList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.SharedConfigMapList) []*v1alpha1.SharedConfigMap {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.SharedConfigMapList, items []*v1alpha1.SharedConfigMap) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
