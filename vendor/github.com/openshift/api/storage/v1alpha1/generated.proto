
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.openshift.api.storage.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// ResourceReference represents the backing object for this share
// Only one of its supported types may be specified at any given time
message ResourceReference {
  // type is the SharedResourceType for the shared resource.
  // Valid types are: ConfigMap, Secret.
  // +kubebuilder:validation:Enum="ConfigMap";"Secret"
  optional string type = 1;

  // configMap provides details about the backing object if it is a ConfigMap.
  // If set, type must be "ConfigMap".
  optional ResourceReferenceConfigMap configMap = 3;

  // secret provides details about the backing object if it is a Secret.
  // If set, type must be "Secret".
  optional ResourceReferenceSecret secret = 2;
}

// ResourceReferenceConfigMap provides details about the ConfigMap that is being shared
message ResourceReferenceConfigMap {
  // name represents the name of the ConfigMap that is being referenced.
  // +kubebuilder:validation:Required
  optional string name = 1;

  // namespace represents the namespace where the referenced ConfigMap is located.
  // +kubebuilder:validation:Required
  optional string namespace = 2;
}

// ResourceReferenceSecret provides details about the Secret that is being shared
message ResourceReferenceSecret {
  // name represents the name of the Secret that is being referenced.
  // +kubebuilder:validation:Required
  optional string name = 1;

  // namespace represents the namespace where the referenced Secret is located.
  // +kubebuilder:validation:Required
  optional string namespace = 2;
}

// SharedResource allows a backing Secret or ConfigMap to be shared across namespaces.
// Pods can mount the shared Secret or ConfigMap by adding a CSI volume to the pod specification using the
// "sharedresource.csi.storage.openshift.io" CSI driver and a reference to the SharedResource in the volume attributes:
//
// spec:
//  volumes:
//  - name: shared-secret
//    csi:
//      driver: sharedresource.csi.storage.openshift.io
//      volumeAttributes:
//        sharedResource: my-share
//
// For the mount to be successful, the pod's service account must be granted permission to get the named SharedResource object with an appropriate
// ClusterRole and ClusterRoleBinding.
//
// Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
// These capabilities should not be used by applications needing long term support.
// +k8s:openapi-gen=true
// +openshift:compatibility-gen:level=4
// +kubebuilder:subresource:status
message SharedResource {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Specification of the desired shared resource
  // +kubebuilder:validation:Required
  optional SharedResourceSpec spec = 2;

  // Observed status of the shared resource
  optional SharedResourceStatus status = 3;
}

// SharedResourceList contains a list of SharedResource objects.
//
// Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
// These capabilities should not be used by applications needing long term support.
// +openshift:compatibility-gen:level=4
message SharedResourceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated SharedResource items = 2;
}

// SharedResourceSpec defines the desired state of a SharedResource.
// +k8s:openapi-gen=true
message SharedResourceSpec {
  // resource references the backing object for this shared resource.
  // +kubebuilder:validation:Required
  optional ResourceReference resource = 1;

  // description is a user readable explanation of what the backing resource provides.
  optional string description = 2;
}

// SharedResourceStatus contains the observed status of shared resource. Read-only.
message SharedResourceStatus {
  // conditions represents any observations made on this particular shared resource by the underlying CSI driver or Share controller.
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated k8s.io.apimachinery.pkg.apis.meta.v1.Condition conditions = 1;
}

