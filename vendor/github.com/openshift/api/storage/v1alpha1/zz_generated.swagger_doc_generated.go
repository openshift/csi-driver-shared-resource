package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ResourceReference = map[string]string{
	"":          "ResourceReference represents the backing object for this share Only one of its supported types may be specified at any given time",
	"type":      "type is the SharedResourceType for the shared resource. Valid types are: ConfigMap, Secret.",
	"configMap": "configMap provides details about the backing object if it is a ConfigMap. If set, type must be \"ConfigMap\".",
	"secret":    "secret provides details about the backing object if it is a Secret. If set, type must be \"Secret\".",
}

func (ResourceReference) SwaggerDoc() map[string]string {
	return map_ResourceReference
}

var map_ResourceReferenceConfigMap = map[string]string{
	"":          "ResourceReferenceConfigMap provides details about the ConfigMap that is being shared",
	"name":      "name represents the name of the ConfigMap that is being referenced.",
	"namespace": "namespace represents the namespace where the referenced ConfigMap is located.",
}

func (ResourceReferenceConfigMap) SwaggerDoc() map[string]string {
	return map_ResourceReferenceConfigMap
}

var map_ResourceReferenceSecret = map[string]string{
	"":          "ResourceReferenceSecret provides details about the Secret that is being shared",
	"name":      "name represents the name of the Secret that is being referenced.",
	"namespace": "namespace represents the namespace where the referenced Secret is located.",
}

func (ResourceReferenceSecret) SwaggerDoc() map[string]string {
	return map_ResourceReferenceSecret
}

var map_SharedResource = map[string]string{
	"":       "SharedResource allows a backing Secret or ConfigMap to be shared across namespaces. Pods can mount the shared Secret or ConfigMap by adding a CSI volume to the pod specification using the \"sharedresource.csi.storage.openshift.io\" CSI driver and a reference to the SharedResource in the volume attributes:\n\nspec:\n volumes:\n - name: shared-secret\n   csi:\n     driver: sharedresource.csi.storage.openshift.io\n     volumeAttributes:\n       sharedResource: my-share\n\nFor the mount to be successful, the pod's service account must be granted permission to get the named SharedResource object with an appropriate ClusterRole and ClusterRoleBinding.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support. These capabilities should not be used by applications needing long term support.",
	"spec":   "Specification of the desired shared resource",
	"status": "Observed status of the shared resource",
}

func (SharedResource) SwaggerDoc() map[string]string {
	return map_SharedResource
}

var map_SharedResourceList = map[string]string{
	"": "SharedResourceList contains a list of SharedResource objects.\n\nCompatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support. These capabilities should not be used by applications needing long term support.",
}

func (SharedResourceList) SwaggerDoc() map[string]string {
	return map_SharedResourceList
}

var map_SharedResourceSpec = map[string]string{
	"":            "SharedResourceSpec defines the desired state of a SharedResource.",
	"resource":    "resource references the backing object for this shared resource.",
	"description": "description is a user readable explanation of what the backing resource provides.",
}

func (SharedResourceSpec) SwaggerDoc() map[string]string {
	return map_SharedResourceSpec
}

var map_SharedResourceStatus = map[string]string{
	"":           "SharedResourceStatus contains the observed status of shared resource. Read-only.",
	"conditions": "conditions represents any observations made on this particular shared resource by the underlying CSI driver or Share controller.",
}

func (SharedResourceStatus) SwaggerDoc() map[string]string {
	return map_SharedResourceStatus
}

// AUTO-GENERATED FUNCTIONS END HERE
